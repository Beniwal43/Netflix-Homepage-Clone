{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beniwal\\\\Desktop\\\\netflix-clone\\\\src\\\\helpers\\\\routes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function IsUserRedirect(_ref) {\n  let {\n    user,\n    loggedInPath,\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => {\n      if (!user) {\n        return children;\n      }\n\n      if (user) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: loggedInPath\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this);\n      }\n\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = IsUserRedirect;\nexport function ProtectedRoute(_ref2) {\n  let {\n    user,\n    children,\n    ...rest\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref3 => {\n      let {\n        location\n      } = _ref3;\n\n      if (user) {\n        return children;\n      }\n\n      if (!user) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: 'signin',\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      }\n\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ProtectedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IsUserRedirect\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Redirect","IsUserRedirect","user","loggedInPath","children","rest","pathname","ProtectedRoute","location","state","from"],"sources":["C:/Users/Beniwal/Desktop/netflix-clone/src/helpers/routes.js"],"sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (!user) {\n          return children;\n        }\n\n        if (user) {\n          return (\n            <Redirect\n              to={{\n                pathname: loggedInPath,\n              }}\n            />\n          );\n        }\n\n        return null;\n      }}\n    />\n  );\n}\n\nexport function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (user) {\n          return children;\n        }\n\n        if (!user) {\n          return (\n            <Redirect\n              to={{\n                pathname: 'signin',\n                state: { from: location },\n              }}\n            />\n          );\n        }\n\n        return null;\n      }}\n    />\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,OAAO,SAASC,cAAT,OAAmE;EAAA,IAA3C;IAAEC,IAAF;IAAQC,YAAR;IAAsBC,QAAtB;IAAgC,GAAGC;EAAnC,CAA2C;EACxE,oBACE,QAAC,KAAD,OACMA,IADN;IAEE,MAAM,EAAE,MAAM;MACZ,IAAI,CAACH,IAAL,EAAW;QACT,OAAOE,QAAP;MACD;;MAED,IAAIF,IAAJ,EAAU;QACR,oBACE,QAAC,QAAD;UACE,EAAE,EAAE;YACFI,QAAQ,EAAEH;UADR;QADN;UAAA;UAAA;UAAA;QAAA,QADF;MAOD;;MAED,OAAO,IAAP;IACD;EAlBH;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;KAvBeF,c;AAyBhB,OAAO,SAASM,cAAT,QAAqD;EAAA,IAA7B;IAAEL,IAAF;IAAQE,QAAR;IAAkB,GAAGC;EAArB,CAA6B;EAC1D,oBACE,QAAC,KAAD,OACMA,IADN;IAEE,MAAM,EAAE,SAAkB;MAAA,IAAjB;QAAEG;MAAF,CAAiB;;MACxB,IAAIN,IAAJ,EAAU;QACR,OAAOE,QAAP;MACD;;MAED,IAAI,CAACF,IAAL,EAAW;QACT,oBACE,QAAC,QAAD;UACE,EAAE,EAAE;YACFI,QAAQ,EAAE,QADR;YAEFG,KAAK,EAAE;cAAEC,IAAI,EAAEF;YAAR;UAFL;QADN;UAAA;UAAA;UAAA;QAAA,QADF;MAQD;;MAED,OAAO,IAAP;IACD;EAnBH;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;MAxBeD,c"},"metadata":{},"sourceType":"module"}