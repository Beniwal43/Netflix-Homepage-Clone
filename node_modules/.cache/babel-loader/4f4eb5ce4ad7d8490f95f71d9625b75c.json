{"ast":null,"code":"// import React, { useState, useContext } from 'react';\n// import { useHistory } from 'react-router-dom';\n// import { FirebaseContext } from '../context/firebase';\n// import { Form } from '../components';\n// import { HeaderContainer } from '../containers/header';\n// import { FooterContainer } from '../containers/footer';\n// import * as ROUTES from '../constants/routes';\n// export default function SignUp() {\n//   const history = useHistory();\n//   const { firebase } = useContext(FirebaseContext);\n//   const [firstName, setFirstName] = useState('');\n//   const [emailAddress, setEmailAddress] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const isInvalid = firstName === '' || password === '' || emailAddress === '';\n//   const handleSignup = (event) => {\n//     event.preventDefault();\n//     return firebase\n//       .auth()\n//       .createUserWithEmailAndPassword(emailAddress, password)\n//       .then((result) =>\n//         result.user\n//           .updateProfile({\n//             displayName: firstName,\n//             photoURL: Math.floor(Math.random() * 5) + 1,\n//           })\n//           .then(() => {\n//             history.push(ROUTES.BROWSE);\n//           })\n//       )\n//       .catch((error) => {\n//         setFirstName('');\n//         setEmailAddress('');\n//         setPassword('');\n//         setError(error.message);\n//       });\n//   };\n//   return (\n//     <>\n//       <HeaderContainer>\n//         <Form>\n//           <Form.Title>Sign Up</Form.Title>\n//           {error && <Form.Error>{error}</Form.Error>}\n//           <Form.Base onSubmit={handleSignup} method=\"POST\">\n//             <Form.Input\n//               placeholder=\"First name\"\n//               value={firstName}\n//               onChange={({ target }) => setFirstName(target.value)}\n//             />\n//             <Form.Input\n//               placeholder=\"Email address\"\n//               value={emailAddress}\n//               onChange={({ target }) => setEmailAddress(target.value)}\n//             />\n//             <Form.Input\n//               type=\"password\"\n//               value={password}\n//               autoComplete=\"off\"\n//               placeholder=\"Password\"\n//               onChange={({ target }) => setPassword(target.value)}\n//             />\n//             <Form.Submit disabled={isInvalid} type=\"submit\" data-testid=\"sign-up\">\n//               Sign Up\n//             </Form.Submit>\n//           </Form.Base>\n//           <Form.Text>\n//             Already a user? <Form.Link to=\"/signin\">Sign in now.</Form.Link>\n//           </Form.Text>\n//           <Form.TextSmall>\n//             This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more.\n//           </Form.TextSmall>\n//         </Form>\n//       </HeaderContainer>\n//       <FooterContainer />\n//     </>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Beniwal/Desktop/netflix-clone/src/pages/signup.js"],"sourcesContent":["// import React, { useState, useContext } from 'react';\n// import { useHistory } from 'react-router-dom';\n// import { FirebaseContext } from '../context/firebase';\n// import { Form } from '../components';\n// import { HeaderContainer } from '../containers/header';\n// import { FooterContainer } from '../containers/footer';\n// import * as ROUTES from '../constants/routes';\n\n// export default function SignUp() {\n//   const history = useHistory();\n//   const { firebase } = useContext(FirebaseContext);\n\n//   const [firstName, setFirstName] = useState('');\n//   const [emailAddress, setEmailAddress] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n\n//   const isInvalid = firstName === '' || password === '' || emailAddress === '';\n\n//   const handleSignup = (event) => {\n//     event.preventDefault();\n\n//     return firebase\n//       .auth()\n//       .createUserWithEmailAndPassword(emailAddress, password)\n//       .then((result) =>\n//         result.user\n//           .updateProfile({\n//             displayName: firstName,\n//             photoURL: Math.floor(Math.random() * 5) + 1,\n//           })\n//           .then(() => {\n//             history.push(ROUTES.BROWSE);\n//           })\n//       )\n//       .catch((error) => {\n//         setFirstName('');\n//         setEmailAddress('');\n//         setPassword('');\n//         setError(error.message);\n//       });\n//   };\n\n//   return (\n//     <>\n//       <HeaderContainer>\n//         <Form>\n//           <Form.Title>Sign Up</Form.Title>\n//           {error && <Form.Error>{error}</Form.Error>}\n\n//           <Form.Base onSubmit={handleSignup} method=\"POST\">\n//             <Form.Input\n//               placeholder=\"First name\"\n//               value={firstName}\n//               onChange={({ target }) => setFirstName(target.value)}\n//             />\n//             <Form.Input\n//               placeholder=\"Email address\"\n//               value={emailAddress}\n//               onChange={({ target }) => setEmailAddress(target.value)}\n//             />\n//             <Form.Input\n//               type=\"password\"\n//               value={password}\n//               autoComplete=\"off\"\n//               placeholder=\"Password\"\n//               onChange={({ target }) => setPassword(target.value)}\n//             />\n//             <Form.Submit disabled={isInvalid} type=\"submit\" data-testid=\"sign-up\">\n//               Sign Up\n//             </Form.Submit>\n//           </Form.Base>\n\n//           <Form.Text>\n//             Already a user? <Form.Link to=\"/signin\">Sign in now.</Form.Link>\n//           </Form.Text>\n//           <Form.TextSmall>\n//             This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more.\n//           </Form.TextSmall>\n//         </Form>\n//       </HeaderContainer>\n//       <FooterContainer />\n//     </>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}