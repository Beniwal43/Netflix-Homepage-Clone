{"ast":null,"code":"// import React, { useState, useContext, createContext } from 'react';\n// import {\n//   Container,\n//   Group,\n//   Title,\n//   SubTitle,\n//   Text,\n//   Feature,\n//   FeatureTitle,\n//   FeatureText,\n//   FeatureClose,\n//   Maturity,\n//   Content,\n//   Meta,\n//   Entities,\n//   Item,\n//   Image,\n// } from './styles/card';\n// export const FeatureContext = createContext();\n// export default function Card({ children, ...restProps }) {\n//   const [showFeature, setShowFeature] = useState(false);\n//   const [itemFeature, setItemFeature] = useState({});\n//   return (\n//     <FeatureContext.Provider value={{ showFeature, setShowFeature, itemFeature, setItemFeature }}>\n//       <Container {...restProps}>{children}</Container>\n//     </FeatureContext.Provider>\n//   );\n// }\n// Card.Group = function CardGroup({ children, ...restProps }) {\n//   return <Group {...restProps}>{children}</Group>;\n// };\n// Card.Title = function CardTitle({ children, ...restProps }) {\n//   return <Title {...restProps}>{children}</Title>;\n// };\n// Card.SubTitle = function CardSubTitle({ children, ...restProps }) {\n//   return <SubTitle {...restProps}>{children}</SubTitle>;\n// };\n// Card.Text = function CardText({ children, ...restProps }) {\n//   return <Text {...restProps}>{children}</Text>;\n// };\n// Card.Entities = function CardEntities({ children, ...restProps }) {\n//   return <Entities {...restProps}>{children}</Entities>;\n// };\n// Card.Meta = function CardMeta({ children, ...restProps }) {\n//   return <Meta {...restProps}>{children}</Meta>;\n// };\n// Card.Item = function CardItem({ item, children, ...restProps }) {\n//   const { setShowFeature, setItemFeature } = useContext(FeatureContext);\n//   return (\n//     <Item\n//       onClick={() => {\n//         setItemFeature(item);\n//         setShowFeature(true);\n//       }}\n//       {...restProps}\n//     >\n//       {children}\n//     </Item>\n//   );\n// };\n// Card.Image = function CardImage({ ...restProps }) {\n//   return <Image {...restProps} />;\n// };\n// Card.Feature = function CardFeature({ children, category, ...restProps }) {\n//   const { showFeature, itemFeature, setShowFeature } = useContext(FeatureContext);\n//   return showFeature ? (\n//     <Feature {...restProps} src={`/images/${category}/${itemFeature.genre}/${itemFeature.slug}/large.jpg`}>\n//       <Content>\n//         <FeatureTitle>{itemFeature.title}</FeatureTitle>\n//         <FeatureText>{itemFeature.description}</FeatureText>\n//         <FeatureClose onClick={() => setShowFeature(false)}>\n//           <img src=\"/images/icons/close.png\" alt=\"Close\" />\n//         </FeatureClose>\n//         <Group margin=\"30px 0\" flexDirection=\"row\" alignItems=\"center\">\n//           <Maturity rating={itemFeature.maturity}>{itemFeature.maturity < 12 ? 'PG' : itemFeature.maturity}</Maturity>\n//           <FeatureText fontWeight=\"bold\">\n//             {itemFeature.genre.charAt(0).toUpperCase() + itemFeature.genre.slice(1)}\n//           </FeatureText>\n//         </Group>\n//         {children}\n//       </Content>\n//     </Feature>\n//   ) : null;\n// };","map":{"version":3,"names":[],"sources":["C:/Users/Beniwal/Desktop/netflix-clone/src/components/card/index.js"],"sourcesContent":["// import React, { useState, useContext, createContext } from 'react';\n\n// import {\n//   Container,\n//   Group,\n//   Title,\n//   SubTitle,\n//   Text,\n//   Feature,\n//   FeatureTitle,\n//   FeatureText,\n//   FeatureClose,\n//   Maturity,\n//   Content,\n//   Meta,\n//   Entities,\n//   Item,\n//   Image,\n// } from './styles/card';\n\n// export const FeatureContext = createContext();\n\n// export default function Card({ children, ...restProps }) {\n//   const [showFeature, setShowFeature] = useState(false);\n//   const [itemFeature, setItemFeature] = useState({});\n\n//   return (\n//     <FeatureContext.Provider value={{ showFeature, setShowFeature, itemFeature, setItemFeature }}>\n//       <Container {...restProps}>{children}</Container>\n//     </FeatureContext.Provider>\n//   );\n// }\n\n// Card.Group = function CardGroup({ children, ...restProps }) {\n//   return <Group {...restProps}>{children}</Group>;\n// };\n\n// Card.Title = function CardTitle({ children, ...restProps }) {\n//   return <Title {...restProps}>{children}</Title>;\n// };\n\n// Card.SubTitle = function CardSubTitle({ children, ...restProps }) {\n//   return <SubTitle {...restProps}>{children}</SubTitle>;\n// };\n\n// Card.Text = function CardText({ children, ...restProps }) {\n//   return <Text {...restProps}>{children}</Text>;\n// };\n\n// Card.Entities = function CardEntities({ children, ...restProps }) {\n//   return <Entities {...restProps}>{children}</Entities>;\n// };\n\n// Card.Meta = function CardMeta({ children, ...restProps }) {\n//   return <Meta {...restProps}>{children}</Meta>;\n// };\n\n// Card.Item = function CardItem({ item, children, ...restProps }) {\n//   const { setShowFeature, setItemFeature } = useContext(FeatureContext);\n\n//   return (\n//     <Item\n//       onClick={() => {\n//         setItemFeature(item);\n//         setShowFeature(true);\n//       }}\n//       {...restProps}\n//     >\n//       {children}\n//     </Item>\n//   );\n// };\n\n// Card.Image = function CardImage({ ...restProps }) {\n//   return <Image {...restProps} />;\n// };\n\n// Card.Feature = function CardFeature({ children, category, ...restProps }) {\n//   const { showFeature, itemFeature, setShowFeature } = useContext(FeatureContext);\n\n//   return showFeature ? (\n//     <Feature {...restProps} src={`/images/${category}/${itemFeature.genre}/${itemFeature.slug}/large.jpg`}>\n//       <Content>\n//         <FeatureTitle>{itemFeature.title}</FeatureTitle>\n//         <FeatureText>{itemFeature.description}</FeatureText>\n//         <FeatureClose onClick={() => setShowFeature(false)}>\n//           <img src=\"/images/icons/close.png\" alt=\"Close\" />\n//         </FeatureClose>\n\n//         <Group margin=\"30px 0\" flexDirection=\"row\" alignItems=\"center\">\n//           <Maturity rating={itemFeature.maturity}>{itemFeature.maturity < 12 ? 'PG' : itemFeature.maturity}</Maturity>\n//           <FeatureText fontWeight=\"bold\">\n//             {itemFeature.genre.charAt(0).toUpperCase() + itemFeature.genre.slice(1)}\n//           </FeatureText>\n//         </Group>\n\n//         {children}\n//       </Content>\n//     </Feature>\n//   ) : null;\n// };\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}